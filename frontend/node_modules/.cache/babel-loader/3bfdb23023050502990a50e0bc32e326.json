{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS } from '../constants/restaurantConstants';\nimport axios from \"axios\";\nexport const restaurantlogin = (ownerEmailID, ownerPassword) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:4000/api/restaurant/login', {\n      ownerEmailID,\n      ownerPassword\n    }, config); // alert(JSON.stringify(data))\n\n    if (data.data.message === \"Invalid Email ID\") {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: \"Invalid Email Id\"\n      });\n    } else {\n      if (data.data.message === \"The status is deactive\") {\n        dispatch({\n          type: LOGIN_FAIL,\n          payload: \"Your Account is Deactive\"\n        });\n      } else {\n        if (data.data.message === \"Invalid Password\") {\n          dispatch({\n            type: LOGIN_FAIL,\n            payload: \"Invalid Password\"\n          });\n        } else {\n          sessionStorage.setItem(\"restaurant\", JSON.stringify(data.data.restaurant));\n          sessionStorage.setItem(\"x-auth-token\", data.data.token);\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.data\n          });\n        }\n      }\n    }\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clearing Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","axios","restaurantlogin","ownerEmailID","ownerPassword","dispatch","type","config","headers","data","post","message","payload","sessionStorage","setItem","JSON","stringify","restaurant","token","error","response","clearErrors"],"sources":["D:/sem7/Billy/frontend/src/actions/restaurantAction.js"],"sourcesContent":["import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,   \r\n    CLEAR_ERRORS\r\n} from '../constants/restaurantConstants'\r\nimport axios from \"axios\"\r\n\r\n\r\nexport const restaurantlogin = (ownerEmailID, ownerPassword) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LOGIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const { data } = await axios.post('http://localhost:4000/api/restaurant/login', {ownerEmailID,ownerPassword}, config);\r\n\r\n        // alert(JSON.stringify(data))\r\n        \r\n        if(data.data.message === \"Invalid Email ID\")\r\n        {\r\n            dispatch({ type: LOGIN_FAIL, payload: \"Invalid Email Id\"})\r\n        }else{\r\n          if(data.data.message === \"The status is deactive\"){\r\n            dispatch({ type: LOGIN_FAIL, payload: \"Your Account is Deactive\"})\r\n          }else{\r\n            if(data.data.message === \"Invalid Password\"){\r\n              dispatch({ type: LOGIN_FAIL, payload: \"Invalid Password\"})\r\n          }\r\n          else{\r\n              sessionStorage.setItem(\"restaurant\", JSON.stringify(data.data.restaurant));\r\n              sessionStorage.setItem(\"x-auth-token\", data.data.token);\r\n              dispatch({ type: LOGIN_SUCCESS, payload: data.data})\r\n          }\r\n          }\r\n        }\r\n\r\n        \r\n    } catch (error) {\r\n        dispatch({ type: LOGIN_FAIL, payload: error.response.data.message})\r\n    }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};"],"mappings":"AAAA,SACIA,aADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,YAJJ,QAKO,kCALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,eAAe,GAAG,CAACC,YAAD,EAAeC,aAAf,KAAiC,MAAOC,QAAP,IAAoB;EAChF,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAR,CAAD,CAAR;IAEA,MAAMU,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB;MADX;IADE,CAAf;IAKA,MAAM;MAAEC;IAAF,IAAW,MAAMR,KAAK,CAACS,IAAN,CAAW,4CAAX,EAAyD;MAACP,YAAD;MAAcC;IAAd,CAAzD,EAAuFG,MAAvF,CAAvB,CARA,CAUA;;IAEA,IAAGE,IAAI,CAACA,IAAL,CAAUE,OAAV,KAAsB,kBAAzB,EACA;MACIN,QAAQ,CAAC;QAAEC,IAAI,EAAEP,UAAR;QAAoBa,OAAO,EAAE;MAA7B,CAAD,CAAR;IACH,CAHD,MAGK;MACH,IAAGH,IAAI,CAACA,IAAL,CAAUE,OAAV,KAAsB,wBAAzB,EAAkD;QAChDN,QAAQ,CAAC;UAAEC,IAAI,EAAEP,UAAR;UAAoBa,OAAO,EAAE;QAA7B,CAAD,CAAR;MACD,CAFD,MAEK;QACH,IAAGH,IAAI,CAACA,IAAL,CAAUE,OAAV,KAAsB,kBAAzB,EAA4C;UAC1CN,QAAQ,CAAC;YAAEC,IAAI,EAAEP,UAAR;YAAoBa,OAAO,EAAE;UAA7B,CAAD,CAAR;QACH,CAFC,MAGE;UACAC,cAAc,CAACC,OAAf,CAAuB,YAAvB,EAAqCC,IAAI,CAACC,SAAL,CAAeP,IAAI,CAACA,IAAL,CAAUQ,UAAzB,CAArC;UACAJ,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCL,IAAI,CAACA,IAAL,CAAUS,KAAjD;UACAb,QAAQ,CAAC;YAAEC,IAAI,EAAER,aAAR;YAAuBc,OAAO,EAAEH,IAAI,CAACA;UAArC,CAAD,CAAR;QACH;MACA;IACF;EAGJ,CA/BD,CA+BE,OAAOU,KAAP,EAAc;IACZd,QAAQ,CAAC;MAAEC,IAAI,EAAEP,UAAR;MAAoBa,OAAO,EAAEO,KAAK,CAACC,QAAN,CAAeX,IAAf,CAAoBE;IAAjD,CAAD,CAAR;EACH;AACJ,CAnCM,C,CAqCP;;AACA,OAAO,MAAMU,WAAW,GAAG,MAAM,MAAOhB,QAAP,IAAoB;EACnDA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAR,CAAD,CAAR;AACD,CAFM"},"metadata":{},"sourceType":"module"}