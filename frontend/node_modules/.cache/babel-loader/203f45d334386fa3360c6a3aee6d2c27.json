{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS } from \"../constants/adminConstants\";\nimport axios from \"axios\";\nexport const adminlogin = (adminEmailID, adminPassword) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:4000/api/admin/login', {\n      adminEmailID,\n      adminPassword\n    }, config); // alert(JSON.stringify(data));\n\n    if (data.data.message === \"Invalid Email ID\") {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: \"Invalid Email Id\"\n      });\n    } else {\n      if (data.data.message === \"Invalid Password\") {\n        dispatch({\n          type: LOGIN_FAIL,\n          payload: \"Invalid Password\"\n        });\n      } else {\n        sessionStorage.setItem(\"admin\", JSON.stringify(data.data.admin));\n        sessionStorage.setItem(\"x-auth-token\", data.data.token);\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: data\n        });\n      }\n    }\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clearing Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","axios","adminlogin","adminEmailID","adminPassword","dispatch","type","config","headers","data","post","message","payload","sessionStorage","setItem","JSON","stringify","admin","token","error","response","clearErrors"],"sources":["D:/sem7/Billy/frontend/src/actions/adminAction.js"],"sourcesContent":["import { \r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    CLEAR_ERRORS\r\n} from \"../constants/adminConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const adminlogin = (adminEmailID, adminPassword) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: LOGIN_REQUEST });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const { data } = await axios.post('http://localhost:4000/api/admin/login', {adminEmailID,adminPassword}, config);\r\n\r\n        // alert(JSON.stringify(data));\r\n        if(data.data.message === \"Invalid Email ID\")\r\n        {\r\n            dispatch({ type: LOGIN_FAIL, payload: \"Invalid Email Id\"})\r\n        }else{\r\n            if(data.data.message === \"Invalid Password\"){\r\n                dispatch({ type: LOGIN_FAIL, payload: \"Invalid Password\"})\r\n            }\r\n            else{\r\n                sessionStorage.setItem(\"admin\", JSON.stringify(data.data.admin));\r\n                sessionStorage.setItem(\"x-auth-token\", data.data.token);\r\n                dispatch({ type: LOGIN_SUCCESS, payload: data})\r\n            }\r\n            \r\n        }\r\n\r\n        \r\n    } catch (error) {\r\n        dispatch({ type: LOGIN_FAIL, payload: error.response.data.message})\r\n    }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n  };"],"mappings":"AAAA,SACIA,aADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,YAJJ,QAKO,6BALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,YAAD,EAAeC,aAAf,KAAiC,MAAOC,QAAP,IAAoB;EAC3E,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAR,CAAD,CAAR;IAEA,MAAMU,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB;MADX;IADE,CAAf;IAKA,MAAM;MAAEC;IAAF,IAAW,MAAMR,KAAK,CAACS,IAAN,CAAW,uCAAX,EAAoD;MAACP,YAAD;MAAcC;IAAd,CAApD,EAAkFG,MAAlF,CAAvB,CARA,CAUA;;IACA,IAAGE,IAAI,CAACA,IAAL,CAAUE,OAAV,KAAsB,kBAAzB,EACA;MACIN,QAAQ,CAAC;QAAEC,IAAI,EAAEP,UAAR;QAAoBa,OAAO,EAAE;MAA7B,CAAD,CAAR;IACH,CAHD,MAGK;MACD,IAAGH,IAAI,CAACA,IAAL,CAAUE,OAAV,KAAsB,kBAAzB,EAA4C;QACxCN,QAAQ,CAAC;UAAEC,IAAI,EAAEP,UAAR;UAAoBa,OAAO,EAAE;QAA7B,CAAD,CAAR;MACH,CAFD,MAGI;QACAC,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCC,IAAI,CAACC,SAAL,CAAeP,IAAI,CAACA,IAAL,CAAUQ,KAAzB,CAAhC;QACAJ,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCL,IAAI,CAACA,IAAL,CAAUS,KAAjD;QACAb,QAAQ,CAAC;UAAEC,IAAI,EAAER,aAAR;UAAuBc,OAAO,EAAEH;QAAhC,CAAD,CAAR;MACH;IAEJ;EAGJ,CA3BD,CA2BE,OAAOU,KAAP,EAAc;IACZd,QAAQ,CAAC;MAAEC,IAAI,EAAEP,UAAR;MAAoBa,OAAO,EAAEO,KAAK,CAACC,QAAN,CAAeX,IAAf,CAAoBE;IAAjD,CAAD,CAAR;EACH;AACJ,CA/BM,C,CAiCP;;AACA,OAAO,MAAMU,WAAW,GAAG,MAAM,MAAOhB,QAAP,IAAoB;EACjDA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAR,CAAD,CAAR;AACD,CAFI"},"metadata":{},"sourceType":"module"}