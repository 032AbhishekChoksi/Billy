{"ast":null,"code":"import * as React from 'react';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport default function useTreeItem(nodeId) {\n  const {\n    focus,\n    isExpanded,\n    isExpandable,\n    isFocused,\n    isDisabled,\n    isSelected,\n    multiSelect,\n    selectNode,\n    selectRange,\n    toggleExpansion\n  } = React.useContext(TreeViewContext);\n  const expandable = isExpandable ? isExpandable(nodeId) : false;\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n\n  const handleExpansion = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n      if (expandable && !(multiple && isExpanded(nodeId))) {\n        toggleExpansion(event, nodeId);\n      }\n    }\n  };\n\n  const handleSelection = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey);\n\n      if (multiple) {\n        if (event.shiftKey) {\n          selectRange(event, {\n            end: nodeId\n          });\n        } else {\n          selectNode(event, nodeId, true);\n        }\n      } else {\n        selectNode(event, nodeId);\n      }\n    }\n  };\n\n  const preventSelection = event => {\n    if (event.shiftKey || event.ctrlKey || event.metaKey || disabled) {\n      // Prevent text selection\n      event.preventDefault();\n    }\n  };\n\n  return {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection\n  };\n}","map":{"version":3,"names":["React","TreeViewContext","useTreeItem","nodeId","focus","isExpanded","isExpandable","isFocused","isDisabled","isSelected","multiSelect","selectNode","selectRange","toggleExpansion","useContext","expandable","expanded","focused","disabled","selected","handleExpansion","event","multiple","shiftKey","ctrlKey","metaKey","handleSelection","end","preventSelection","preventDefault"],"sources":["D:/sem7/Billy/frontend/node_modules/@mui/lab/TreeItem/useTreeItem.js"],"sourcesContent":["import * as React from 'react';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport default function useTreeItem(nodeId) {\n  const {\n    focus,\n    isExpanded,\n    isExpandable,\n    isFocused,\n    isDisabled,\n    isSelected,\n    multiSelect,\n    selectNode,\n    selectRange,\n    toggleExpansion\n  } = React.useContext(TreeViewContext);\n  const expandable = isExpandable ? isExpandable(nodeId) : false;\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const handleExpansion = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey);\n\n      // If already expanded and trying to toggle selection don't close\n      if (expandable && !(multiple && isExpanded(nodeId))) {\n        toggleExpansion(event, nodeId);\n      }\n    }\n  };\n  const handleSelection = event => {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n      const multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey);\n      if (multiple) {\n        if (event.shiftKey) {\n          selectRange(event, {\n            end: nodeId\n          });\n        } else {\n          selectNode(event, nodeId, true);\n        }\n      } else {\n        selectNode(event, nodeId);\n      }\n    }\n  };\n  const preventSelection = event => {\n    if (event.shiftKey || event.ctrlKey || event.metaKey || disabled) {\n      // Prevent text selection\n      event.preventDefault();\n    }\n  };\n  return {\n    disabled,\n    expanded,\n    selected,\n    focused,\n    handleExpansion,\n    handleSelection,\n    preventSelection\n  };\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAA6B;EAC1C,MAAM;IACJC,KADI;IAEJC,UAFI;IAGJC,YAHI;IAIJC,SAJI;IAKJC,UALI;IAMJC,UANI;IAOJC,WAPI;IAQJC,UARI;IASJC,WATI;IAUJC;EAVI,IAWFb,KAAK,CAACc,UAAN,CAAiBb,eAAjB,CAXJ;EAYA,MAAMc,UAAU,GAAGT,YAAY,GAAGA,YAAY,CAACH,MAAD,CAAf,GAA0B,KAAzD;EACA,MAAMa,QAAQ,GAAGX,UAAU,GAAGA,UAAU,CAACF,MAAD,CAAb,GAAwB,KAAnD;EACA,MAAMc,OAAO,GAAGV,SAAS,GAAGA,SAAS,CAACJ,MAAD,CAAZ,GAAuB,KAAhD;EACA,MAAMe,QAAQ,GAAGV,UAAU,GAAGA,UAAU,CAACL,MAAD,CAAb,GAAwB,KAAnD;EACA,MAAMgB,QAAQ,GAAGV,UAAU,GAAGA,UAAU,CAACN,MAAD,CAAb,GAAwB,KAAnD;;EACA,MAAMiB,eAAe,GAAGC,KAAK,IAAI;IAC/B,IAAI,CAACH,QAAL,EAAe;MACb,IAAI,CAACD,OAAL,EAAc;QACZb,KAAK,CAACiB,KAAD,EAAQlB,MAAR,CAAL;MACD;;MACD,MAAMmB,QAAQ,GAAGZ,WAAW,KAAKW,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACG,OAAxB,IAAmCH,KAAK,CAACI,OAA9C,CAA5B,CAJa,CAMb;;MACA,IAAIV,UAAU,IAAI,EAAEO,QAAQ,IAAIjB,UAAU,CAACF,MAAD,CAAxB,CAAlB,EAAqD;QACnDU,eAAe,CAACQ,KAAD,EAAQlB,MAAR,CAAf;MACD;IACF;EACF,CAZD;;EAaA,MAAMuB,eAAe,GAAGL,KAAK,IAAI;IAC/B,IAAI,CAACH,QAAL,EAAe;MACb,IAAI,CAACD,OAAL,EAAc;QACZb,KAAK,CAACiB,KAAD,EAAQlB,MAAR,CAAL;MACD;;MACD,MAAMmB,QAAQ,GAAGZ,WAAW,KAAKW,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACG,OAAxB,IAAmCH,KAAK,CAACI,OAA9C,CAA5B;;MACA,IAAIH,QAAJ,EAAc;QACZ,IAAID,KAAK,CAACE,QAAV,EAAoB;UAClBX,WAAW,CAACS,KAAD,EAAQ;YACjBM,GAAG,EAAExB;UADY,CAAR,CAAX;QAGD,CAJD,MAIO;UACLQ,UAAU,CAACU,KAAD,EAAQlB,MAAR,EAAgB,IAAhB,CAAV;QACD;MACF,CARD,MAQO;QACLQ,UAAU,CAACU,KAAD,EAAQlB,MAAR,CAAV;MACD;IACF;EACF,CAlBD;;EAmBA,MAAMyB,gBAAgB,GAAGP,KAAK,IAAI;IAChC,IAAIA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACG,OAAxB,IAAmCH,KAAK,CAACI,OAAzC,IAAoDP,QAAxD,EAAkE;MAChE;MACAG,KAAK,CAACQ,cAAN;IACD;EACF,CALD;;EAMA,OAAO;IACLX,QADK;IAELF,QAFK;IAGLG,QAHK;IAILF,OAJK;IAKLG,eALK;IAMLM,eANK;IAOLE;EAPK,CAAP;AASD"},"metadata":{},"sourceType":"module"}