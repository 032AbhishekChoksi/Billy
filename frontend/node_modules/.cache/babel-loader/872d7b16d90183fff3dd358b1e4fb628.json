{"ast":null,"code":"import { All_QUESTION_REQUEST, All_QUESTION_SUCCESS, All_QUESTION_FAIL, CLEAR_ERRORS } from '../constants/questionConstants.js';\nimport axios from 'axios';\nimport { DELETE_DELIVERYBOY_FAIL, DELETE_DELIVERYBOY_REQUEST, DELETE_DELIVERYBOY_SUCCESS } from '../constants/deliveryBoyConstants.js';\nexport const getquestion = () => async dispatch => {\n  try {\n    dispatch({\n      type: All_QUESTION_REQUEST\n    });\n    const token = \"bearer \" + (await sessionStorage.getItem(\"x-auth-token\"));\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    const {\n      data\n    } = await axios.get('http://localhost:4000/api/question', '', '');\n    dispatch({\n      type: All_QUESTION_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: All_QUESTION_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete Product\n\nexport const deletequestion = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_DELIVERYBOY_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const token = \"bearer \" + (await sessionStorage.getItem(\"x-auth-token\"));\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    const {\n      data\n    } = await axios.delete(`http://localhost:4000/api/question/${id}`, '', config);\n\n    if (data.message === \"Success\") {\n      dispatch({\n        type: DELETE_DELIVERYBOY_SUCCESS,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: DELETE_DELIVERYBOY_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clearing Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["All_QUESTION_REQUEST","All_QUESTION_SUCCESS","All_QUESTION_FAIL","CLEAR_ERRORS","axios","DELETE_DELIVERYBOY_FAIL","DELETE_DELIVERYBOY_REQUEST","DELETE_DELIVERYBOY_SUCCESS","getquestion","dispatch","type","token","sessionStorage","getItem","defaults","headers","common","data","get","payload","error","response","message","deletequestion","id","config","delete","clearErrors"],"sources":["D:/sem7/Billy/frontend/src/actions/questionAction.js"],"sourcesContent":["import {\r\n    All_QUESTION_REQUEST,\r\n    All_QUESTION_SUCCESS,\r\n    All_QUESTION_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/questionConstants.js';\r\nimport axios from 'axios';\r\nimport { DELETE_DELIVERYBOY_FAIL, DELETE_DELIVERYBOY_REQUEST, DELETE_DELIVERYBOY_SUCCESS } from '../constants/deliveryBoyConstants.js';\r\n\r\nexport const getquestion = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: All_QUESTION_REQUEST });\r\n        const token = (\"bearer \" + await sessionStorage.getItem(\"x-auth-token\"));\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n        const { data } = await axios.get('http://localhost:4000/api/question', '', '');\r\n        \r\n        dispatch( { type: All_QUESTION_SUCCESS, payload: data.data})\r\n\r\n    } catch (error) {\r\n        dispatch({ type: All_QUESTION_FAIL, payload: error.response.data.message})\r\n    }\r\n};\r\n\r\n// Delete Product\r\nexport const deletequestion = (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: DELETE_DELIVERYBOY_REQUEST });\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      const token = (\"bearer \" + await sessionStorage.getItem(\"x-auth-token\"));\r\n      axios.defaults.headers.common[\"Authorization\"] = token;\r\n      const { data } = await axios.delete(`http://localhost:4000/api/question/${id}`, '', config);\r\n  \r\n      if(data.message === \"Success\")\r\n      {\r\n        dispatch({\r\n          type: DELETE_DELIVERYBOY_SUCCESS,\r\n          payload: true,\r\n        });\r\n      }\r\n      \r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_DELIVERYBOY_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n};"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,YAJJ,QAKO,mCALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,0BAAlC,EAA8DC,0BAA9D,QAAgG,sCAAhG;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACjD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAMW,KAAK,GAAI,aAAY,MAAMC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAlB,CAAf;IACAT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDL,KAAjD;IACA,MAAM;MAAEM;IAAF,IAAW,MAAMb,KAAK,CAACc,GAAN,CAAU,oCAAV,EAAgD,EAAhD,EAAoD,EAApD,CAAvB;IAEAT,QAAQ,CAAE;MAAEC,IAAI,EAAET,oBAAR;MAA8BkB,OAAO,EAAEF,IAAI,CAACA;IAA5C,CAAF,CAAR;EAEH,CARD,CAQE,OAAOG,KAAP,EAAc;IACZX,QAAQ,CAAC;MAAEC,IAAI,EAAER,iBAAR;MAA2BiB,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;IAAxD,CAAD,CAAR;EACH;AACJ,CAZM,C,CAcP;;AACA,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAAQ,MAAOf,QAAP,IAAoB;EACtD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEJ;IAAR,CAAD,CAAR;IAEA,MAAMmB,MAAM,GAAG;MACbV,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;IAKA,MAAMJ,KAAK,GAAI,aAAY,MAAMC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAlB,CAAf;IACAT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDL,KAAjD;IACA,MAAM;MAAEM;IAAF,IAAW,MAAMb,KAAK,CAACsB,MAAN,CAAc,sCAAqCF,EAAG,EAAtD,EAAyD,EAAzD,EAA6DC,MAA7D,CAAvB;;IAEA,IAAGR,IAAI,CAACK,OAAL,KAAiB,SAApB,EACA;MACEb,QAAQ,CAAC;QACPC,IAAI,EAAEH,0BADC;QAEPY,OAAO,EAAE;MAFF,CAAD,CAAR;IAID;EAEF,CApBD,CAoBE,OAAOC,KAAP,EAAc;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAEL,uBADC;MAEPc,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;IAFtB,CAAD,CAAR;EAID;AACJ,CA3BM,C,CA6BP;;AACA,OAAO,MAAMK,WAAW,GAAG,MAAM,MAAOlB,QAAP,IAAoB;EACjDA,QAAQ,CAAC;IAAEC,IAAI,EAAEP;EAAR,CAAD,CAAR;AACH,CAFM"},"metadata":{},"sourceType":"module"}