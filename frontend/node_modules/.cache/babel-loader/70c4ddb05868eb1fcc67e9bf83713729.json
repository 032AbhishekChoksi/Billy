{"ast":null,"code":"import { All_DELIVERYBOY_REQUEST, All_DELIVERYBOY_SUCCESS, All_DELIVERYBOY_FAIL, NEW_DELIVERYBOY_REQUEST, NEW_DELIVERYBOY_SUCCESS, NEW_DELIVERYBOY_FAIL, NEW_DELIVERYBOY_RESET, UPDATE_DELIVERYBOY_REQUEST, UPDATE_DELIVERYBOY_SUCCESS, UPDATE_DELIVERYBOY_FAIL, UPDATE_DELIVERYBOY_RESET, DELETE_DELIVERYBOY_REQUEST, DELETE_DELIVERYBOY_SUCCESS, DELETE_DELIVERYBOY_FAIL, DELETE_DELIVERYBOY_RESET, SINGLE_DELIVERYBOY_REQUEST, SINGLE_DELIVERYBOY_SUCCESS, SINGLE_DELIVERYBOY_FAIL, CLEAR_ERRORS } from \"../constants/deliveryBoyConstants.js\";\nimport axios from \"axios\";\nexport const getdeliveryboy = () => async dispatch => {\n  try {\n    dispatch({\n      type: All_DELIVERYBOY_REQUEST\n    });\n    alert(\"hello\");\n    const token = \"bearer \" + (await sessionStorage.getItem(\"x-auth-token\"));\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    const {\n      data\n    } = await axios.get(`http://${process.env.REACT_APP_IP}/api/deliveryBoy?page=1&pageSize=10`, '', '');\n    alert(JSON.stringify(data));\n    dispatch({\n      type: All_DELIVERYBOY_SUCCESS,\n      payload: data.data\n    });\n  } catch (error) {\n    dispatch({\n      type: All_DELIVERYBOY_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Create DeliveryBoy\n\nexport const createDeliveryBoy = deliveryBoyData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_DELIVERYBOY_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const token = \"bearer \" + (await sessionStorage.getItem(\"x-auth-token\"));\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    const {\n      data\n    } = await axios.post(`http://${process.env.REACT_APP_IP}/api/deliveryBoy`, deliveryBoyData, config); // alert(JSON.stringify(data.message))\n\n    if (data.message === \"Success\") {\n      dispatch({\n        type: NEW_DELIVERYBOY_SUCCESS,\n        payload: true\n      });\n    } else {\n      dispatch({\n        type: NEW_DELIVERYBOY_FAIL,\n        payload: \"Someting Went Wrong\"\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: NEW_DELIVERYBOY_RESET,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete Product\n\nexport const deletedeliveryBoy = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_DELIVERYBOY_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const token = \"bearer \" + (await sessionStorage.getItem(\"x-auth-token\"));\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    const {\n      data\n    } = await axios.delete(`http://${process.env.REACT_APP_IP}/api/deliveryBoy/${id}`, '', config);\n\n    if (data.message === \"Success\") {\n      dispatch({\n        type: DELETE_DELIVERYBOY_SUCCESS,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: DELETE_DELIVERYBOY_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update DeliveryBoy\n\nexport const updateDeliveryBoy = (deliveryBoyId, deliveryBoyData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_DELIVERYBOY_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const token = \"bearer \" + (await sessionStorage.getItem(\"x-auth-token\"));\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    const {\n      data\n    } = await axios.put(`http://${process.env.REACT_APP_IP}/api/deliveryBoy/${deliveryBoyId}`, deliveryBoyData, config);\n\n    if (data.message === \"Success\") {\n      dispatch({\n        type: UPDATE_DELIVERYBOY_SUCCESS,\n        payload: true\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: UPDATE_DELIVERYBOY_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Single Question\n\nexport const getsingledeliveryboy = id => async dispatch => {\n  try {\n    dispatch({\n      type: SINGLE_DELIVERYBOY_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const token = \"bearer \" + (await sessionStorage.getItem(\"x-auth-token\"));\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    const {\n      data\n    } = await axios.get(`http://${process.env.REACT_APP_IP}/api/deliveryBoy/${id}`, '', config);\n\n    if (data.message === \"Success\") {\n      dispatch({\n        type: SINGLE_DELIVERYBOY_SUCCESS,\n        payload: data.data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: SINGLE_DELIVERYBOY_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clearing Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["All_DELIVERYBOY_REQUEST","All_DELIVERYBOY_SUCCESS","All_DELIVERYBOY_FAIL","NEW_DELIVERYBOY_REQUEST","NEW_DELIVERYBOY_SUCCESS","NEW_DELIVERYBOY_FAIL","NEW_DELIVERYBOY_RESET","UPDATE_DELIVERYBOY_REQUEST","UPDATE_DELIVERYBOY_SUCCESS","UPDATE_DELIVERYBOY_FAIL","UPDATE_DELIVERYBOY_RESET","DELETE_DELIVERYBOY_REQUEST","DELETE_DELIVERYBOY_SUCCESS","DELETE_DELIVERYBOY_FAIL","DELETE_DELIVERYBOY_RESET","SINGLE_DELIVERYBOY_REQUEST","SINGLE_DELIVERYBOY_SUCCESS","SINGLE_DELIVERYBOY_FAIL","CLEAR_ERRORS","axios","getdeliveryboy","dispatch","type","alert","token","sessionStorage","getItem","defaults","headers","common","data","get","process","env","REACT_APP_IP","JSON","stringify","payload","error","response","message","createDeliveryBoy","deliveryBoyData","config","post","deletedeliveryBoy","id","delete","updateDeliveryBoy","deliveryBoyId","put","getsingledeliveryboy","clearErrors"],"sources":["D:/sem7/Billy/frontend/src/actions/deliveryBoyAction.js"],"sourcesContent":["import {\r\n  All_DELIVERYBOY_REQUEST,\r\n  All_DELIVERYBOY_SUCCESS,\r\n  All_DELIVERYBOY_FAIL,\r\n  NEW_DELIVERYBOY_REQUEST,\r\n  NEW_DELIVERYBOY_SUCCESS,\r\n  NEW_DELIVERYBOY_FAIL,\r\n  NEW_DELIVERYBOY_RESET,\r\n  UPDATE_DELIVERYBOY_REQUEST,\r\n  UPDATE_DELIVERYBOY_SUCCESS,\r\n  UPDATE_DELIVERYBOY_FAIL,\r\n  UPDATE_DELIVERYBOY_RESET,\r\n  DELETE_DELIVERYBOY_REQUEST,\r\n  DELETE_DELIVERYBOY_SUCCESS,\r\n  DELETE_DELIVERYBOY_FAIL,\r\n  DELETE_DELIVERYBOY_RESET,\r\n  SINGLE_DELIVERYBOY_REQUEST,\r\n  SINGLE_DELIVERYBOY_SUCCESS,\r\n  SINGLE_DELIVERYBOY_FAIL,\r\n  CLEAR_ERRORS\r\n} from \"../constants/deliveryBoyConstants.js\"\r\nimport axios from \"axios\"\r\n\r\nexport const getdeliveryboy = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: All_DELIVERYBOY_REQUEST })\r\n    alert(\"hello\")\r\n    const token = (\"bearer \" + await sessionStorage.getItem(\"x-auth-token\"));\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n    const { data } = await axios.get(`http://${process.env.REACT_APP_IP}/api/deliveryBoy?page=1&pageSize=10`, '', '');\r\n    alert(JSON.stringify(data))\r\n    dispatch({ type: All_DELIVERYBOY_SUCCESS, payload: data.data })\r\n\r\n  } catch (error) {\r\n    dispatch({ type: All_DELIVERYBOY_FAIL, payload: error.response.data.message })\r\n  }\r\n};\r\n\r\n// Create DeliveryBoy\r\nexport const createDeliveryBoy = (deliveryBoyData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_DELIVERYBOY_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const token = (\"bearer \" + await sessionStorage.getItem(\"x-auth-token\"));\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n    const { data } = await axios.post(`http://${process.env.REACT_APP_IP}/api/deliveryBoy`, deliveryBoyData, config);\r\n    // alert(JSON.stringify(data.message))\r\n    if(data.message === \"Success\")\r\n    {\r\n      dispatch({\r\n        type: NEW_DELIVERYBOY_SUCCESS,\r\n        payload: true,\r\n      });\r\n    }\r\n    else{\r\n      dispatch({\r\n        type: NEW_DELIVERYBOY_FAIL,\r\n        payload: \"Someting Went Wrong\",\r\n      });\r\n    }\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_DELIVERYBOY_RESET,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Product\r\nexport const deletedeliveryBoy = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_DELIVERYBOY_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n    const token = (\"bearer \" + await sessionStorage.getItem(\"x-auth-token\"));\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n    const { data } = await axios.delete(`http://${process.env.REACT_APP_IP}/api/deliveryBoy/${id}`, '', config);\r\n\r\n    if(data.message === \"Success\")\r\n    {\r\n      dispatch({\r\n        type: DELETE_DELIVERYBOY_SUCCESS,\r\n        payload: true,\r\n      });\r\n    }\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_DELIVERYBOY_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update DeliveryBoy\r\nexport const updateDeliveryBoy = (deliveryBoyId, deliveryBoyData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_DELIVERYBOY_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const token = (\"bearer \" + await sessionStorage.getItem(\"x-auth-token\"));\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n    const {data} = await axios.put(`http://${process.env.REACT_APP_IP}/api/deliveryBoy/${deliveryBoyId}`, deliveryBoyData, config);\r\n    \r\n    if(data.message === \"Success\")\r\n    {\r\n      dispatch({\r\n        type: UPDATE_DELIVERYBOY_SUCCESS,\r\n        payload: true,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_DELIVERYBOY_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Single Question\r\nexport const getsingledeliveryboy = (id) => async (dispatch) => {\r\n  try {\r\n      dispatch({ type: SINGLE_DELIVERYBOY_REQUEST });\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      const token = (\"bearer \" + await sessionStorage.getItem(\"x-auth-token\"));\r\n      axios.defaults.headers.common[\"Authorization\"] = token;\r\n      const { data } = await axios.get(`http://${process.env.REACT_APP_IP}/api/deliveryBoy/${id}`, '', config);\r\n      \r\n    if(data.message === \"Success\")\r\n    {\r\n      dispatch({\r\n        type: SINGLE_DELIVERYBOY_SUCCESS,\r\n        payload: data.data,\r\n      });\r\n    }\r\n  } catch (error) {\r\n      dispatch({ type: SINGLE_DELIVERYBOY_FAIL, payload: error.response.data.message})\r\n  }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}